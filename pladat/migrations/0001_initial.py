# Generated by Django 3.1.4 on 2021-01-08 20:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import pladat.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=40)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=13)),
                ('description', models.TextField(blank=True)),
                ('birthday', models.DateField(null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=pladat.models.profile_photo_location)),
                ('twitter_account', models.CharField(blank=True, max_length=255)),
                ('github_account', models.CharField(blank=True, max_length=255)),
                ('linkedin_account', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/static/')),
            ],
        ),
        migrations.CreateModel(
            name='Placement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to=pladat.models.placement_photo_location)),
                ('description', models.TextField()),
                ('skill_levels', models.CharField(blank=True, max_length=100, validators=[django.core.validators.int_list_validator])),
                ('wage', models.IntegerField()),
                ('address', models.TextField()),
                ('publish_date', models.DateTimeField()),
                ('application_deadline', models.DateTimeField()),
                ('job_duration', models.DurationField()),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='SkillLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_levels', models.CharField(blank=True, max_length=100, validators=[django.core.validators.int_list_validator])),
                ('resume', models.FileField(blank=True, null=True, upload_to='uploads/resumes/')),
                ('school', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('grade', models.IntegerField()),
                ('skills', models.ManyToManyField(blank=True, to='pladat.Skill')),
                ('starred_placements', models.ManyToManyField(blank=True, to='pladat.Placement')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='placement',
            name='applications',
            field=models.ManyToManyField(blank=True, to='pladat.Student'),
        ),
        migrations.AddField(
            model_name='placement',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pladat.category'),
        ),
        migrations.AddField(
            model_name='placement',
            name='employer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pladat.employer'),
        ),
        migrations.AddField(
            model_name='placement',
            name='required_skills',
            field=models.ManyToManyField(blank=True, to='pladat.Skill'),
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('title', models.CharField(max_length=120)),
                ('content', models.TextField()),
                ('images', models.ManyToManyField(to='pladat.Image')),
            ],
        ),
        migrations.AddField(
            model_name='employer',
            name='starred_students',
            field=models.ManyToManyField(blank=True, to='pladat.Student'),
        ),
        migrations.AddField(
            model_name='employer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
